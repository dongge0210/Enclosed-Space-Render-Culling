package com.dongge0210.enclosedculling;

import com.dongge0210.enclosedculling.config.ModConfig;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.ModLoadingContext;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

@Mod(EnclosedSpaceRenderCulling.MODID)
public class EnclosedSpaceRenderCulling {
    public static final String MODID = "enclosed_culling";
    public static final Logger LOGGER = LogManager.getLogger();

    public EnclosedSpaceRenderCulling() {
        LOGGER.info("EnclosedSpaceRenderCulling starting initialization...");
        
        try {
            // 获取事件总线
            IEventBus modEventBus = FMLJavaModLoadingContext.get().getModEventBus();
            
            // 注册配置
            ModLoadingContext.get().registerConfig(net.minecraftforge.fml.config.ModConfig.Type.COMMON, ModConfig.COMMON_SPEC);
            
            // 注册事件监听器
            modEventBus.addListener(this::commonSetup);
            modEventBus.addListener(this::clientSetup);
            
            LOGGER.info("EnclosedSpaceRenderCulling constructor completed successfully");
        } catch (Exception e) {
            LOGGER.error("Error during mod initialization: {}", e.getMessage(), e);
            throw e;
        }
    }

    private void commonSetup(final FMLCommonSetupEvent event) {
        LOGGER.info("EnclosedSpaceRenderCulling commonSetup starting...");
        event.enqueueWork(() -> {
            try {
                LOGGER.info("Common setup completed successfully");
            } catch (Exception e) {
                LOGGER.error("Error during common setup: {}", e.getMessage(), e);
            }
        });
    }

    private void clientSetup(final FMLClientSetupEvent event) {
        LOGGER.info("EnclosedSpaceRenderCulling clientSetup starting...");
        event.enqueueWork(() -> {
            try {
                // 注册基本的剔除系统
                com.dongge0210.enclosedculling.culling.SpaceCullingManager.register();
                LOGGER.info("Client setup completed successfully");
            } catch (Exception e) {
                LOGGER.error("Error during client setup: {}", e.getMessage(), e);
            }
        });
    }
}
